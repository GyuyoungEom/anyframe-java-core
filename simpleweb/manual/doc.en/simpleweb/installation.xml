<chapter id="simpleweb_installation">
	<title>Install a Simpleweb-VO Plugin</title>
	<para>
		This chapter describes how to simplify web development 
		and how to integrate Spring JS, jQuery to handle Ajax Request, 
		centered on sample code created by Simpleweb Plugin installation.
		<note>
			<title>Provide three plugins according to Transfer Object</title>
			<para> 
		 		Simpleweb Plugin is classified into three plugins which are 
		 		simpleweb-vo (uses vo object), simpleweb-map (uses map object), and simpleweb-json (uses json object) 
		 		according to the type of transfer object. 
		 		Basically when developing based on JSP, install simpleweb-vo plugin for vo, simpleweb-map plugin for map, and simpleweb-json plugin for integration jQuery.
			</para>
		</note>
	</para>
	
	<para>
		Let's start with installing Simpleweb Plugin on your local PC.
	</para>
	<orderedlist numeration="arabic" inheritnum="inherit">	
		<listitem>
			<para>
			    To install Simpleweb Plugin, Foundation Plugin which is the base of all plugins should be installed. 
				If you need to install Foundation Plugin, go to 
			    <ulink url="http://dev.anyframejava.org/docs/anyframe/plugin/foundation/4.6.1/reference/htmlsingle/foundation.html#foundation_installation">
			    Install Foundation Plugin</ulink>.
			</para>
		</listitem>	
		<listitem>
			<para>
				After moving to sample project on the command window, start sample DB by executing db/hsqldb/start.cmd (or start.sh). 
				(If you wish to use another DB instead of HsqlDB which is basically provided, go to <ulink url="http://dev.anyframejava.org/docs/anyframe/ide/1.0.1/reference/htmlsingle/ide.html#cli_maven_db">Change DB
				</ulink> in Anyframe IDE Manual.)
			</para>
		</listitem>
		<listitem>
			<para>
				Enter the following command in the command window to install simpleweb plugin.
			</para>
			<programlisting language="java"><![CDATA[mvn anyframe:install -DpluginName=simpleweb-vo]]></programlisting>
		</listitem>
		<listitem>
			<para>
				Enter the following command in the command window, and when the Jetty Server starts, check if simpleweb plugin is installed properly through browser. 
			   (Enter http://localhost:8080/myproject in the browser address box if the created sample project name is myproject.)
			</para>
			<programlisting language="java"><![CDATA[mvn clean jetty:run]]></programlisting>
			<mediaobject>
				<imageobject>
					<imagedata align="center" fileref="../image/simpleweb/simpleweb_vo_installation.jpg" />
				</imageobject>
			</mediaobject>
			<para>
				As seen in the figure above, 
		        SimpleWeb-VO Sample menu has been created other than the Foundation sample menu on the left menu bar. 
		        Click SimpleWeb-Map Sample menu to check if item addition or modification functions 
                used by Common Controller and Anyframe Tag Library using Map object, are handled properly. 
			</para>	
		</listitem>
	</orderedlist>
	<note id="simpleweb_overview_note">
		<title>Notice for each WAS(Web Application Server)</title>
		<para>
			This document describes Jetty and Tomcat as WAS for executing sample application created by Plugin installation.
			However, as the sample application created by Plugin installation is not dependent on a specific WAS,
			it is possible to deploy and execute other WAS as well such as WebLogic, JEUS after packaging 
			through executing command such as "mvn clean compile war:war".
			However, there are cases where the version of some libraries which sample application refer to is not supported 
			in the relevant WAS. The following is how to handle such cases.		
	     	<para>
				First of all, refer to <ulink url="http://dev.anyframejava.org/docs/anyframe/plugin/foundation/4.6.1/reference/htmlsingle/foundation.html#foundation_overview_note">Notice for each WAS(Web Application Server)</ulink>
		    	in foundation plugin manual.	     	
	     		When there are plugins installed other than foundation plugin, also refer to Installation > Notice for each WAS(Web Application Server) in
     			each plugin manual.
	     	</para>	
	     	<para>
	     		The following are notes for each WAS of sample application that has installed Simpleweb-VO Plugin.
	     	</para>		
	     	<itemizedlist>
     			<listitem>
     				<para>WebLogic</para>
		 			<itemizedlist>
		     			<listitem> 
		     				<para>9.2 : Sample application is composed based on tiles, 
		     				    and adopts tiles-config_2_1.dtd to enable the use of EL(Expression Language) when defining tiles. 
		     				    However, this is a function that is supported from Servlet Spec. 2.5 onwards and 
		     				    WebLogic 9.2 is WAS that implements Servlet Spec. 2.4., so there is a problem in handling this function. 
		     				    Therefore, el-api.jar should be added in WEB_INF/lib under sample application, and 'tilesConfigurer' Bean definition should be updated. 
		     				    For the update method, refer to 
		     				    <ulink url="http://dev.anyframejava.org/docs/anyframe/plugin/foundation/4.6.1/reference/htmlsingle/foundation.html#foundation_overview_note">Notice for each WAS(Web Application Server)</ulink>.
		     				</para>     				
		     			</listitem>
		     		</itemizedlist>    				
     			</listitem>
     		</itemizedlist>	     				
     	</para>			
	</note>	
</chapter>